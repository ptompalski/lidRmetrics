% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics_texture.R
\name{metrics_texture}
\alias{metrics_texture}
\title{Canopy texture metrics}
\usage{
metrics_texture(x, y, z, pixel_size, zmin = NA, chm_algorithm = NULL, ...)
}
\arguments{
\item{x, y, z}{X, Y, Z coordinates of a point cloud}

\item{pixel_size}{Pixel size of the CHM}

\item{zmin}{Minimum height. If set, heights below are ignored in calculations.}

\item{chm_algorithm}{Function used to generate the CHM. By default \code{lidR::p2r(na.fill = lidR::knnidw())} is used.}

\item{...}{additional parameters passed to \code{ForestTools::glcm_img()} function}
}
\value{
GLCM metrics
}
\description{
Generates a suite of GLCM (Grey-Level Co-Occurence Matrix) metrics of a canopy height model (CHM).
}
\details{
Function first uses the \code{lidR::grid_canopy()} algorithm to create a CHM. 
 \code{ForestTools::glcm_img()} function is then used to calculate GLCM statistics (see package manual for details). 
This implementation of GLCM does not allow for missing values - after CHM is created, any missing values are converted to 0.
}
\examples{
library(lidR)
library(lidRmetrics)
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
las <- readLAS(LASfile, select = "*", filter = "-keep_random_fraction 0.5")

m1 <- cloud_metrics(las, ~metrics_texture(x = X, y = Y, z = Z, pixel_size = 1))

m2 <- grid_metrics(las, ~metrics_texture(x = X, y = Y, z = Z, pixel_size = 1), res = 20)
}
