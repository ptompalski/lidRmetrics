[{"path":"https://ptompalski.github.io/lidRmetrics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Piotr Tompalski. Author, maintainer. Jean-Romain Roussel. Contributor. Murray Woods. Contributor. Leonard Hambrecht. Contributor.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tompalski P (2024). lidRmetrics: Suplemetary point cloud metrics.. R package version 0.1.2, https://ptompalski.github.io/lidRmetrics/.","code":"@Manual{,   title = {lidRmetrics: Suplemetary point cloud metrics.},   author = {Piotr Tompalski},   year = {2024},   note = {R package version 0.1.2},   url = {https://ptompalski.github.io/lidRmetrics/}, }"},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"lidrmetrics","dir":"","previous_headings":"","what":"Suplemetary point cloud metrics.","title":"Suplemetary point cloud metrics.","text":"Additional point cloud metrics use *_metric functions lidR package. package serves companion lidR package offers variety functions calculating different types point cloud metrics. include metrics_basic() basic information point cloud, metrics_percentiles() height percentiles, metrics_percabove() metrics_dispersion() characterizing vertical structure. Additionally, metrics_echo() metrics_echo2() provide information number proportion different return types, metrics_interval() calculates percentage points horizontal layers. complex metrics metrics_kde metrics_voxels() also included. comprehensive list metrics corresponding functions can found table . individual functions serve building blocks can combined create various sets metrics. package includes three examples metric sets.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Suplemetary point cloud metrics.","text":"can install recent version package executing code :","code":"devtools::install_github(\"ptompalski/lidRmetrics\") library(lidRmetrics)"},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Suplemetary point cloud metrics.","text":"functions lidRmetrics designed used one *_metrics functions lidR package (e.g. pixel_metrics()). example:","code":"library(lidR) library(lidRmetrics)  LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_basic(Z))  m2 <- pixel_metrics(las, ~metrics_set1(Z), res = 20)  m3 <- pixel_metrics(las, ~metrics_set2(X, Y, Z), res = 20)"},{"path":[]},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"simple-descriptive-statistics---metrics_basic","dir":"","previous_headings":"List of metrics","what":"Simple descriptive statistics - metrics_basic()","title":"Suplemetary point cloud metrics.","text":"n - total number returns zmin, zmax, zmean, zvar, zsd, zcv, zskew, zkurt - elevation maximum, minimum, mean, standard deviation, coefficient variation, skewness, kurtosis","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"height-percentiles---metrics_percentiles","dir":"","previous_headings":"List of metrics","what":"Height percentiles - metrics_percentiles()","title":"Suplemetary point cloud metrics.","text":"zq1 zq5 zq10 …, zq90, zq95, zq99","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"proportion-of-returns-above-threshold-height---metrics_percabove","dir":"","previous_headings":"List of metrics","what":"Proportion of returns above threshold height - metrics_percabove()","title":"Suplemetary point cloud metrics.","text":"Proportion returns user-defined threshold. default, percent returns mean elevation, 2 5 m calculated. pzabovemean pzabove2 pzabove5 pzabove*","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"vertical-structure---metrics_dispersion","dir":"","previous_headings":"List of metrics","what":"Vertical structure - metrics_dispersion()","title":"Suplemetary point cloud metrics.","text":"ziqr - interquartile distance zMADmean, zMADmedian - mean absolute deviation (MAD) mean median CRR - canopy relief ratio ((mean - min) / (max – min)) zentropy, VCI - normalized Shannon diversity index, Vertical Complexity Index see: van Ewijk, K. Y., Treitz, P. M., & Scott, N. . (2011). Characterizing Forest Succession Central Ontario using LAS-derived Indices. Photogrammetric Engineering Remote Sensing, 77(3), 261-269","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"cumulative-point-density---metrics_canopydensity","dir":"","previous_headings":"List of metrics","what":"Cumulative point density - metrics_canopydensity()","title":"Suplemetary point cloud metrics.","text":"Canopy density metrics defined Woods et al. 2008. Elevation range divided 10 equal intervals, cumulative proportion returns interval calculated. example, zpcum3 cumulative percentage returns located lower 30% maximum elevation. results last (topmost) layer reported always equal 100%. number layers (default = 10) can specified user. zpcum1 zpcum2 ..., zpcum8 zpcum9 See: M. Woods, K. Lim, P. Treitz. Predicting forest stand variables LiDAR data Great Lakes – St. Lawrence forest Ontario. Forestry Chronicle. 84(6): 827-839.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"l-moments-metrics---metrics_lmoments","dir":"","previous_headings":"List of metrics","what":"L-moments metrics - metrics_Lmoments()","title":"Suplemetary point cloud metrics.","text":"L1, L2, L3, L4 - 1st, 2nd, 3rd, 4th L-moment Lskew - L-moment skewness Lkurt - L-moment kurtosis Lcoefvar - L-moment coefficient variation","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"metrics-based-on-leaf-area-density---metrics_lad","dir":"","previous_headings":"List of metrics","what":"Metrics based on leaf area density - metrics_lad()","title":"Suplemetary point cloud metrics.","text":"lad_max, lad_mean, lad_cv, lad_min, lad_sum","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"interval-metrics---metrics_interval","dir":"","previous_headings":"List of metrics","what":"Interval metrics - metrics_interval()","title":"Suplemetary point cloud metrics.","text":"Interval metrics - proportion returns specified elevation intervals. Default intervals : 0, 0.15, 2, 5, 10, 20, 30. pz_below_0 - proportion returns 0 pz_0.0.15 - proportion returns 0 0.15 m pz_0.15.2 pz_2.5 pz_5.10 pz_10.20 pz_20.30 pz_above_30 - proportion returns 30","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"number-and-proportion-of-returns-by-echo-types---metrics_echo","dir":"","previous_headings":"List of metrics","what":"Number and proportion of returns by echo types - metrics_echo()","title":"Suplemetary point cloud metrics.","text":"n_first, n_intermediate, n_last, n_single, n_multiple - Number returns echo types (First, Intermediate, Last; Single, Multiple) p_first, p_intermediate, p_last, p_single, p_multiple - Proportion returns echo types (First, Intermediate, Last; Single, Multiple) ratio_last_first, ratio_intermediate_first, ratio_multiple_single - Ratios return counts","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"number-of-points-by-return-number---metrics_echo2","dir":"","previous_headings":"List of metrics","what":"Number of points by return number - metrics_echo2()","title":"Suplemetary point cloud metrics.","text":"n_return_1 - total number 1st returns n_return_2 - total number 2nd returns n_return_* - total number * returns","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"a-wrapper-function-for-the-rumple-metric---metrics_rumple","dir":"","previous_headings":"List of metrics","what":"A wrapper function for the rumple metric - metrics_rumple()","title":"Suplemetary point cloud metrics.","text":"wrapper lidR::rumple_index() function allows calculate rumple index without need CHM, can used directly e.g. pixel_metrics function. function combines two required steps, .e. creating surface model, calculating rumple index, one. Top surface created using highest points within pixel. rumple","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"metrics-calculated-using-voxels---metrics_voxels","dir":"","previous_headings":"List of metrics","what":"Metrics calculated using voxels - metrics_voxels()","title":"Suplemetary point cloud metrics.","text":"set metrics calculated voxel space. convenience, point cloud converted voxel space fly, without need using additional processing steps. Note, additional computation required convert point cloud voxels, calculating voxel-based metrics markedly slower metrics_* functions. vn - total number voxels vFRall, vFRcanopy - filled ratio; FRall - ratio number filled voxels voxels located maximum extent point cloud. case FRcanopy empty voxels canopy excluded calculations. vzrumple - vertical rumple vzsd, vzcv - voxel elevation standard deviation coefficient variation OpenGapSpace, ClosedGapSpace, Euphotic, Oligophotic - Canopy volume classes based Lefsky et al 1999 See: Lefsky, M. ., Cohen, W. B., Acker, S. ., Parker, G. G., Spies, T. ., & Harding, D. (1999). Lidar Remote Sensing Canopy Structure Biophysical Properties Douglas-Fir Western Hemlock Forests. Remote Sensing Environment, 70(3), 339–361. doi:10.1016/S0034-4257(99)00052-8","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"metrics-based-on-kernel-density-estimation---metrics_kde","dir":"","previous_headings":"List of metrics","what":"Metrics based on kernel density estimation - [metrics_kde()]","title":"Suplemetary point cloud metrics.","text":"Kernel density estimation (KDE) applied distribution point cloud elevation (Z). KDE allows create probability density function (using Guassian kernel). density function used detect peaks (function maxima), attributes maxima. Based similar metric available Fusion (see references), significant differences list output statistics well default bandwidth used estimating kernel density. kde_peaks_count - number detected distribution maxima (peaks) kde_peak1_elev - elevation (height) corresponding 1st peak kde_peak2_elev - elevation (height) corresponding 2nd peak … kde_peak1_value - kernel density value 1st peak kde_peak2_value - kernel density value 2nd peak … kde_peak1_diff - distance (height difference) peaks 1 2 kde_peak2_diff - distance (height difference) peaks 2 3 … See: McGaughey, R.J., 2021. FUSION/LDV: Software LIDAR Data Analysis Visualization. http://forsys.cfr.washington.edu/software/fusion/FUSION_manual.pdf","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"height-of-median-energy---metrics_home","dir":"","previous_headings":"List of metrics","what":"Height of median energy - metrics_HOME()","title":"Suplemetary point cloud metrics.","text":"HOME - calculations based LAStools’ implementation HOME metric. See: http://lastools.org/download/lascanopy_README.txt","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/index.html","id":"glcm-grey-level-co-occurence-matrix-metrics-of-a-canopy-height-model-chm---metrics_texture","dir":"","previous_headings":"List of metrics","what":"GLCM (Grey-Level Co-Occurence Matrix) metrics of a canopy height model (CHM) - metrics_texture()","title":"Suplemetary point cloud metrics.","text":"glcm_mean, glcm_variance, glcm_autoCorrelation, glcm_cProminence, glcm_cShade, glcm_cTendency, glcm_contrast, glcm_correlation, glcm_differenceEntropy, glcm_dissimilarity, glcm_energy, glcm_entropy, glcm_homogeneity1, glcm_homogeneity2, glcm_IDMN, glcm_IDN, glcm_inverseVariance, glcm_maxProb, glcm_sumAverage, glcm_sumEntropy, glcm_sumVariance Requires {ForestTools} package. ForestTools::glcm_img() function used calculate GLCM statistics (see package manual details)","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":null,"dir":"Reference","previous_headings":"","what":"Height of median energy (HOME) — metrics_HOME","title":"Height of median energy (HOME) — metrics_HOME","text":"function provided aims mimic HOME metric, metric typically used full-waveform lidar.  HOME calculated identifying elevation splits total intensity two equal parts. Function based similar metric implemented LAStools.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Height of median energy (HOME) — metrics_HOME","text":"","code":"metrics_HOME(z, i, zmin = NA)  .metrics_HOME"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Height of median energy (HOME) — metrics_HOME","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Height of median energy (HOME) — metrics_HOME","text":"z Z coordinate point cloud (point heights) Intensity zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Height of median energy (HOME) — metrics_HOME","text":"Height median energy","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_HOME.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Height of median energy (HOME) — metrics_HOME","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_HOME(z = Z, i = Intensity))  m2 <- grid_metrics(las, ~metrics_HOME(z = Z, i = Intensity), res = 20) #> Error in CRS_from_crs(from): package sp required, please install it first"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":null,"dir":"Reference","previous_headings":"","what":"L-moments and L-moment ratios — metrics_Lmoments","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"Calculates L-moments L-moment ratios point cloud heihts.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"","code":"metrics_Lmoments(z, zmin = NA)  .metrics_Lmoments"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"list. L-moments L-moment ratios L-moments: L1, L2, L3, L4 L-moment ratios: Lskew (L3/L2), Lkurt (L4/L2), Lcoefvar (L2/L1)","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_Lmoments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"L-moments and L-moment ratios — metrics_Lmoments","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_Lmoments(z = Z))  m2 <- pixel_metrics(las, ~metrics_Lmoments(z = Z, zmin = 2), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic metrics — metrics_basic","title":"Basic metrics — metrics_basic","text":"common descriptive statistics used characterize vertical distribution points point cloud.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic metrics — metrics_basic","text":"","code":"metrics_basic(z, zmin = NA)  .metrics_basic"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Basic metrics — metrics_basic","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic metrics — metrics_basic","text":"z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic metrics — metrics_basic","text":"set descriptive statistics including: total number points, maximum height, minimum height, mean height,  variance height, standard deviation height, coefficient variation height, skewness kurtosis height.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_basic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic metrics — metrics_basic","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  #================ # CLOUD METRICS #================  m1 <- cloud_metrics(las, ~metrics_basic(z = Z))  #================ # PIXEL METRICS #================  m2 <- pixel_metrics(las, ~metrics_basic(z = Z), res = 20)   #================ # PLOT METRICS #================  shpfile <- system.file(\"extdata\", \"efi_plot.shp\", package=\"lidR\") inventory <- sf::st_read(shpfile, quiet = TRUE)  m3 <- plot_metrics(las, ~metrics_basic(z = Z,  zmin = 2), inventory, radius = 11.28)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_canopydensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Canopy density metrics — metrics_canopydensity","title":"Canopy density metrics — metrics_canopydensity","text":"Cumulative distribution point heights interval count.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_canopydensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canopy density metrics — metrics_canopydensity","text":"","code":"metrics_canopydensity(z, interval_count = 10, zmin = NA)  .metrics_canopydensity"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_canopydensity.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Canopy density metrics — metrics_canopydensity","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_canopydensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canopy density metrics — metrics_canopydensity","text":"z Z coordinate point cloud interval_count Number intervals used divide point height distribution. zmin Minimum height. set, heights ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_canopydensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canopy density metrics — metrics_canopydensity","text":"Cumulative percentage points interval","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispersion metrics — metrics_dispersion","title":"Dispersion metrics — metrics_dispersion","text":"Metrics characterizing dispersion point heights","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispersion metrics — metrics_dispersion","text":"","code":"metrics_dispersion(z, dz = 1, zmin = NA, zmax = NA)  .metrics_dispersion"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dispersion metrics — metrics_dispersion","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispersion metrics — metrics_dispersion","text":"z Z coordinate point cloud (point heights) dz Numeric. Layer thickness use calculating entropy VCI. zmin numeric. Minimum z value. set, z values (heights) ignored calculations. zmax Numeric. Maximum elevation entropy normalized zmax.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispersion metrics — metrics_dispersion","text":"list. Calculated metrics include: ziqr interquartile distance zMADmean mean absolute deviation (MAD) around mean zMADmedian mean absolute deviation (MAD) around median CRR canopy relief ratio zentropy entropy VCI vertical complexity index. Optional - calculated zmax parameter provided.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dispersion metrics — metrics_dispersion","text":"calculating zentropy VCI, z values 0 removed.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dispersion metrics — metrics_dispersion","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_dispersion(z = Z))  m2 <- pixel_metrics(las, ~metrics_dispersion(z = Z, dz = 2, zmax = 30), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":null,"dir":"Reference","previous_headings":"","what":"Number and proportion of points by echo types — metrics_echo","title":"Number and proportion of points by echo types — metrics_echo","text":"Based return number number returns, point cloud returns classified different echo types. Two different classification routines applied. first classification routine returns classified First, Intermediate, Last.  second classification routine returns classified Single Multiple. Function calculates point counts proportions  echo type. Ratios Last First, Intermediate First, Multiple Single, also calculated.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number and proportion of points by echo types — metrics_echo","text":"","code":"metrics_echo(ReturnNumber, NumberOfReturns, z = NULL, zmin = NA)  .metrics_echo"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number and proportion of points by echo types — metrics_echo","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number and proportion of points by echo types — metrics_echo","text":"ReturnNumber return number NumberOfReturns number returns z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number and proportion of points by echo types — metrics_echo","text":"list. Calculated metrics include: Number first (n_first), intermediate (n_intermediate), last (n_last), single (n_single), multiple  (n_multiple) returns Proportion first (p_first), intermediate (p_intermediate), last (p_last), single (p_single), multiple  (p_multiple) returns Ratio Last First (ratio_last_first), Intermediate First (ratio_intermediate_first), Multiple Single (ratio_multiple_single).","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number and proportion of points by echo types — metrics_echo","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_echo(ReturnNumber=ReturnNumber, NumberOfReturns=NumberOfReturns))  m2 <- pixel_metrics(las, ~metrics_echo(ReturnNumber=ReturnNumber, NumberOfReturns=NumberOfReturns), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of points by return number — metrics_echo2","title":"Number of points by return number — metrics_echo2","text":"Calculates number points return number.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of points by return number — metrics_echo2","text":"","code":"metrics_echo2(ReturnNumber, KeepReturns = c(1, 2, 3, 4), z = NULL, zmin = NA)  .metrics_echo2"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Number of points by return number — metrics_echo2","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of points by return number — metrics_echo2","text":"ReturnNumber return number KeepReturns numeric. Return numbers include.  Allows either limit output particular return numbers interest (e.g. c(1, 3)),  extend output always include return numbers (useful processing multiple datasets  different return numbers). See examples. Default c(1,2,3,4) - return numbers 1 - 4 included. z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of points by return number — metrics_echo2","text":"list. Number points return number.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_echo2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of points by return number — metrics_echo2","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_echo2(ReturnNumber=ReturnNumber))  #indlude only Returns 1 and 3 m2 <- pixel_metrics(las, ~metrics_echo2(ReturnNumber=ReturnNumber, KeepReturns=c(1,3)), res = 20)  #include returns 1-5. In this example the highest return number is 4 but the output will still include counts for return number 5 (will be NA) m3 <- pixel_metrics(las, ~metrics_echo2(ReturnNumber=ReturnNumber, MaxReturnNumber=1:5, z=Z, zmin=2), res = 20) #> Error in metrics_echo2(ReturnNumber = ReturnNumber, MaxReturnNumber = 1:5,     z = Z, zmin = 2): unused argument (MaxReturnNumber = 1:5)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval metrics — metrics_interval","title":"Interval metrics — metrics_interval","text":"Percentage points calculated set horizontal layers.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval metrics — metrics_interval","text":"","code":"metrics_interval(z, zintervals = c(0, 0.15, 2, 5, 10, 20, 30), zmin = NA)  .metrics_interval"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Interval metrics — metrics_interval","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interval metrics — metrics_interval","text":"z Z coordinate point cloud (point heights) zintervals Numeric. Height intervals zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interval metrics — metrics_interval","text":"list. Percentage points within height interval","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_interval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interval metrics — metrics_interval","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_interval(z = Z))  m2 <- pixel_metrics(las, ~metrics_interval(z = Z, zintervals = c(0, 5, 10)), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel density estimation (KDE) metrics — metrics_kde","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"Kernel density estimation applied distribution point cloud elevation (Z). KDE allows  create probability density function (using Guassian kernel). density function used detect peaks (function maxima). Based similar metric available Fusion (see references), significant differences list output statistics well default bandwidth used estimating kernel density.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"","code":"metrics_kde(z, bw = 2, zmin = NA, npeaks = 4, ...)  .metrics_kde"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"z Z coordinate point cloud (point heights) bw Numeric. Smoothing bandwidth stats::density function. Note default value (bw=2)  correspond default bw parameter stats::density. zmin numeric. Minimum z value. set, z values (heights) ignored calculations. npeaks Numeric. Maximum number recorded peaks. number detected peaks larger  npeaks, peaks highest density value kept. ... parameters stats::density function","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"list. Number peaks, elevation, density value peak, distance (height difference) peaks","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"McGaughey, R.J., 2021. FUSION/LDV: Software LIDAR Data Analysis Visualization. http://forsys.cfr.washington.edu/software/fusion/FUSION_manual.pdf","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_kde.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kernel density estimation (KDE) metrics — metrics_kde","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_kde(z = Z))  m2 <- pixel_metrics(las, ~metrics_kde(z = Z), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":null,"dir":"Reference","previous_headings":"","what":"LAD metrics — metrics_lad","title":"LAD metrics — metrics_lad","text":"Metrics based leaf area density. lidR::LAD() used calculate leaf area density.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LAD metrics — metrics_lad","text":"","code":"metrics_lad(z, zmin = NA, dz = 1, k = 0.5, z0 = 2)  .metrics_lad"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LAD metrics — metrics_lad","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LAD metrics — metrics_lad","text":"z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations. dz numeric. thickness layers used (height bin) k numeric. extinction coefficient z0 numeric. bottom limit profile","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LAD metrics — metrics_lad","text":"list. lad_min, lad_max, lad_mean, lad_cv, lad_sum.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lad.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LAD metrics — metrics_lad","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_lad(z = Z))  m2 <- pixel_metrics(las, ~metrics_lad(z = Z), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lefsky.html","id":null,"dir":"Reference","previous_headings":"","what":"Canopy volume classes — metrics_lefsky","title":"Canopy volume classes — metrics_lefsky","text":"Canopy volume classes based Lefsky et al 1999 (see references), modified. voxel rerprenetation forest stand divided four classes including: open gap space, closed gap space, euphotic zone, oligophotic zone.  function meant used within metrics_voxels.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lefsky.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canopy volume classes — metrics_lefsky","text":"","code":"metrics_lefsky(x, y, z, n)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lefsky.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canopy volume classes — metrics_lefsky","text":"x, y, z X, Y, Z coordinate voxels n Point count inside voxel. Used distinguish filled empty voxels.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lefsky.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canopy volume classes — metrics_lefsky","text":"Percentage voxels class","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_lefsky.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canopy volume classes — metrics_lefsky","text":"Lefsky, M. ., Cohen, W. B., Acker, S. ., Parker, G. G., Spies, T. ., & Harding, D. (1999). Lidar Remote Sensing Canopy Structure Biophysical Properties Douglas-Fir Western Hemlock Forests. Remote Sensing Environment, 70(3), 339-361. doi:10.1016/S0034-4257(99)00052-8","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":null,"dir":"Reference","previous_headings":"","what":"Percent of points above threshold — metrics_percabove","title":"Percent of points above threshold — metrics_percabove","text":"Calculates percentage points specified threshold heights mean height.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percent of points above threshold — metrics_percabove","text":"","code":"metrics_percabove(z, threshold = c(2, 5), zmin = NA)  .metrics_percabove"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Percent of points above threshold — metrics_percabove","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percent of points above threshold — metrics_percabove","text":"z Z coordinate point cloud (point heights) threshold Numeric. Threshold height(s). Default = c(2, 5). zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percent of points above threshold — metrics_percabove","text":"list. Percent points mean threshold value(s).","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percabove.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percent of points above threshold — metrics_percabove","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_percabove(z = Z))  m2 <- pixel_metrics(las, ~metrics_percabove(z = Z, zmin = 2), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentiles — metrics_percentiles","title":"Percentiles — metrics_percentiles","text":"Percentiles point heights","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentiles — metrics_percentiles","text":"","code":"metrics_percentiles(z, zmin = NA)  .metrics_percentiles"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Percentiles — metrics_percentiles","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentiles — metrics_percentiles","text":"z Z coordinate point cloud (point heights) zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentiles — metrics_percentiles","text":"list. Set height percentiles including: zq1, zq5, zq10, zq15, zq20, zq25, zq30, zq35, zq40, zq45, zq50, zq55, zq60, zq65, zq70, zq75, zq80, zq85, zq90, zq95, zq99.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentiles — metrics_percentiles","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_percentiles(z = Z))  m2 <- pixel_metrics(las, ~metrics_percentiles(z = Z, zmin = 2), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate rumple index — metrics_rumple","title":"Calculate rumple index — metrics_rumple","text":"wrapper lidR::rumple_index function allows calculate rumple index without need CHM,  can used directly e.g. pixel_metrics function. function combines two required steps,  .e. creating surface model, calculating rumple index, one. Top surface created using highest points within pixel.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate rumple index — metrics_rumple","text":"","code":"metrics_rumple(x, y, z, pixel_size, zmin = NA)  .metrics_rumple"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Calculate rumple index — metrics_rumple","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate rumple index — metrics_rumple","text":"x, y, z X, Y, Z coordinates point cloud pixel_size pixel size zmin numeric. Minimum z value. set, z values (heights) ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate rumple index — metrics_rumple","text":"lidR::rumple_index - calculated rumple index","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_rumple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate rumple index — metrics_rumple","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_rumple(x = X, y = Y, z = Z, pixel_size = 1)) #> Error: Package 'geometry' needed for this function to work. Please install it.  m2 <- pixel_metrics(las, ~metrics_rumple(x = X, y = Y, z = Z, pixel_size = 1), res = 20) #> Error: Package 'geometry' needed for this function to work. Please install it."},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-defined sets of metrics — metrics_set1","title":"Pre-defined sets of metrics — metrics_set1","text":"Pre-defined sets point cloud metrics composed different metrics_* functions available package.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-defined sets of metrics — metrics_set1","text":"","code":"metrics_set1(   z,   zmin = NA,   threshold = c(2, 5),   dz = 1,   interval_count = 10,   zintervals = c(0, 0.15, 2, 5, 10, 20, 30) )  .metrics_set1  metrics_set2(   x,   y,   z,   zmin = NA,   threshold = c(2, 5),   dz = 1,   interval_count = 10,   zintervals = c(0, 0.15, 2, 5, 10, 20, 30),   pixel_size = 1,   vox_size = 1 )  .metrics_set2  metrics_set3(   x,   y,   z,   i,   ReturnNumber,   NumberOfReturns,   zmin = NA,   threshold = c(2, 5),   dz = 1,   interval_count = 10,   zintervals = c(0, 0.15, 2, 5, 10, 20, 30),   pixel_size = 1,   vox_size = 1 )  .metrics_set3"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_sets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pre-defined sets of metrics — metrics_set1","text":"object class formula length 2. object class formula length 2. object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-defined sets of metrics — metrics_set1","text":"zmin Minimum height. set, heights ignored calculations. threshold Threshold height(s). See metrics_percabove. dz layer thickness use calculating entropy VCI. interval_count Number intervals used divide point height distribution. See metrics_canopydensity. zintervals Height intervals. See metrics_interval. x, y, z X, Y, Z coordinates point cloud pixel_size pixel size calculating rumple index vox_size voxel size calculating voxel metrics","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pre-defined sets of metrics — metrics_set1","text":"three pre-defined sets metrics include different number metrics_* functions provided  conventiently compute metrics commonly used time. metrics_set1() Included metrics: metrics_basic(), metrics_percentiles(),     metrics_percabove(), metrics_dispersion(),  metrics_canopydensity(),    metrics_Lmoments(), metrics_lad(), metrics_interval(). metrics_set2() Included metrics: metrics metrics_set1(), metrics_rumple(),   metrics_voxels(). metrics_set3() Included metrics: metrics metrics_set2(), metrics_kde(),     metrics_echo(), metrics_HOME() Currently set includes metrics_texture() function considered experimental stage.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":null,"dir":"Reference","previous_headings":"","what":"Canopy texture metrics — metrics_texture","title":"Canopy texture metrics — metrics_texture","text":"Generates suite GLCM (Grey-Level Co-Occurence Matrix) metrics canopy height model (CHM). CHM calculated fly allow easy integration e.g. lidR::pixel_metrics function.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canopy texture metrics — metrics_texture","text":"","code":"metrics_texture(x, y, z, pixel_size, zmin = NA, chm_algorithm = NULL, ...)  .metrics_texture"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Canopy texture metrics — metrics_texture","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canopy texture metrics — metrics_texture","text":"x, y, z X, Y, Z coordinates point cloud pixel_size pixel size zmin numeric. Minimum z value. set, z values (heights) ignored calculations. chm_algorithm Function used generate CHM. default lidR::p2r(na.fill = lidR::knnidw()) used. ... additional parameters passed ForestTools::glcm().","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canopy texture metrics — metrics_texture","text":"list. GLCM metrics.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Canopy texture metrics — metrics_texture","text":"Function first uses lidR::rasterize_canopy() algorithm create CHM.   ForestTools::glcm() function used calculate GLCM statistics (see package manual details).  implementation GLCM allow missing values - CHM created, missing values converted 0.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_texture.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canopy texture metrics — metrics_texture","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_texture(x = X, y = Y, z = Z, pixel_size = 1))  m2 <- pixel_metrics(las, ~metrics_texture(x = X, y = Y, z = Z, pixel_size = 1), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":null,"dir":"Reference","previous_headings":"","what":"Voxel-based metrics — metrics_voxels","title":"Voxel-based metrics — metrics_voxels","text":"set metrics calculated voxel space, designed used within pixel_metrics cloud_metrics function lidR package.  convenience, point cloud converted voxel space fly, without need using additional processing steps.  Note, additional computation required convert point cloud voxels, calculating voxel-based metrics markedly slower metrics_* functions.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Voxel-based metrics — metrics_voxels","text":"","code":"metrics_voxels(x, y, z, vox_size = 1, zmin = NA)  .metrics_voxels"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Voxel-based metrics — metrics_voxels","text":"object class formula length 2.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Voxel-based metrics — metrics_voxels","text":"x, y, z X, Y, Z coordinates point cloud converted voxels vox_size voxel size zmin Minimum height. set, heights ignored calculations.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Voxel-based metrics — metrics_voxels","text":"Calculated metrics include: vn count filled voxels FRall FRcanopy: filled ratio. FRall ratio number filled voxels voxels located  maximum extent point cloud. FRcanopy empty voxels canopy excluded metrics describing vertical distribution filled voxels: standard deviation (vzsd),  coeficient variation (vzcv), vertical rumple (vzrumple). Canopy volume classes based Lefsky et al 1999 (see references), modified. voxel representation forest stand divided four classes including: open gap space, closed gap space, euphotic zone, oligophotic zone.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Voxel-based metrics — metrics_voxels","text":"Lefsky, M. ., Cohen, W. B., Acker, S. ., Parker, G. G., Spies, T. ., & Harding, D. (1999). Lidar Remote Sensing Canopy Structure Biophysical Properties Douglas-Fir Western Hemlock Forests. Remote Sensing Environment, 70(3), 339-361. doi:10.1016/S0034-4257(99)00052-8","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/metrics_voxels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Voxel-based metrics — metrics_voxels","text":"","code":"library(lidR) library(lidRmetrics) LASfile <- system.file(\"extdata\", \"Megaplot.laz\", package=\"lidR\") las <- readLAS(LASfile, select = \"*\", filter = \"-keep_random_fraction 0.5\")  m1 <- cloud_metrics(las, ~metrics_voxels(x = X, y = Y, z = Z, vox_size = 1))  m2 <- pixel_metrics(las, ~metrics_voxels(x = X, y = Y, z = Z, vox_size = 1), res = 20)"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ptompalski.github.io/lidRmetrics/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":[]},{"path":"https://ptompalski.github.io/lidRmetrics/news/index.html","id":"fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Fixes","title":"lidRmetrics 0.1.2","text":"Fixed issue metrics_echo2() caused function fail KeepReturns NULL (default value). Function’s new default value KeepReturns set c(1,2,3,4) (#19). Fixed issue metrics_texture(). Updated match recent changes ForestTool package (#20).","code":""},{"path":[]},{"path":[]},{"path":"https://ptompalski.github.io/lidRmetrics/news/index.html","id":"new-features-0-1-1","dir":"Changelog","previous_headings":"Changes in version 0.1.1","what":"New features","title":"lidRmetrics 0.1.1","text":"New function metrics_echo() New function metrics_echo2() new vignette demonstrating create custom metric sets. General improvements bug fixes. metrics_*() function gained convenient shortcut version: .metrics_*","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/news/index.html","id":"enhancements-0-1-1","dir":"Changelog","previous_headings":"Changes in version 0.1.1","what":"Enhancements","title":"lidRmetrics 0.1.1","text":"Variance (var) now calculated metrics_basic(). may potentially break existing processing routines. Added several checks user-provided input. Error messages now bit informative.","code":""},{"path":"https://ptompalski.github.io/lidRmetrics/news/index.html","id":"fixes-0-1-1","dir":"Changelog","previous_headings":"Changes in version 0.1.1","what":"Fixes","title":"lidRmetrics 0.1.1","text":"Examples now provided functions. examples updated - lidR::grid_metrics() function replaced lidR::pixel_metrics() Fixed issue metrics_voxels() failing zmin parameter used #3 #11 Fixed issue warnings generated using metrics_basic #12 Fixed issue warnings generated using metrics_dispersion #13 VCI calculations incorrect. VCI now requires zmax parameter calculated.","code":""}]
